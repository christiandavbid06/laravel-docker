version: '3'

services:
  sprinterweb:
    image: christiandavbid/laravel:latest
    container_name: sprinterweb
    restart: always
    environment:
      - VIRTUAL_HOST=sprinterweb.anikamagroup.com,www.sprinterweb.anikamagroup.com
      - LETSENCRYPT_HOST=sprinterweb.anikamagroup.com,www.sprinterweb.anikamagroup.com
      - LETSENCRYPT_EMAIL=cvasquez@anikamagroup.com
    expose:
      - "80"
    depends_on:
      - database
      - nginx-proxy
      - ssl
    volumes:
      - "/var/www/sprinterweb:/var/www/app"
    environment: 
      - LANG=es_PE.UTF-5
      - LC_ALL=es_PE.UTF-5
      - LANGUAGE=es_PE:es

  init_laravel:
    image: christiandavbid/laravel:latest
    container_name: init_laravel
    restart: always
    environment:
      - VIRTUAL_HOST=test.anikamagroup.com,www.test.anikamagroup.com
      - LETSENCRYPT_HOST=test.anikamagroup.com,www.test.anikamagroup.com
      - LETSENCRYPT_EMAIL=cvasquez@anikamagroup.com
    expose:
      - '80'
    depends_on: 
      - database
      - nginx-proxy
      - ssl
    volumes:
      - "/var/www/laravel-app:/var/www/app"
    environment: 
     - LANG=es_PE.UTF-5
     - LC_ALL=es_PE.UTF-5
     - LANGUAGE=es_PE:es

  database:
    image: mysql:5.7.22
    container_name: database
    restart: always
    ports:
        - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: weiweiwei
      MYSQL_DATABASE: panel_sprinter
      MYSQL_USER: devops
      MYSQL_PASSWORD: sasasa
    volumes:
      - 'bdata:/var/lib/mysql'
     #- './mysql/my.cnf:/etc/mysql/my.cnf'

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs"
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ssl
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes: 
  bdata: